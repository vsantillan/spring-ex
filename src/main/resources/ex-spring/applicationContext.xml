<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <context:component-scan base-package="mx.com.adea.springex.controllers"/>
    <!--<context:component-scan base-package="mx.com.adea.springex.dao"/>-->
    <mvc:annotation-driven/>

    <beans:bean id="sessionFactory"
                class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <beans:property name="configLocation" value="classpath:hibernate.cfg.xml" />
    </beans:bean>

    <beans:bean id="employeeDao" class="mx.com.adea.springex.dao.impl.EmployeeDaoImpl">
        <beans:constructor-arg ref="sessionFactory"/>
    </beans:bean>

    <!--
        CSRF protection. Here we only include the CsrfFilter instead of all of Spring Security.
        See http://docs.spring.io/spring-security/site/docs/3.2.x/reference/htmlsingle/#csrf for more information on
        Spring Security's CSRF protection
    -->
    <beans:bean id="csrfFilter" class="org.springframework.security.web.csrf.CsrfFilter">
        <beans:constructor-arg>
            <beans:bean
                    class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"/>
        </beans:constructor-arg>
    </beans:bean>
    <!--
        Provides automatic CSRF token inclusion when using Spring MVC Form tags or Thymeleaf. See
        http://localhost:8080/#forms and form.jsp for examples
    -->
    <beans:bean id="requestDataValueProcessor"
                class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor"/>

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <!--<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<beans:property name="prefix" value="/WEB-INF/application/"/>-->
    <!--<beans:property name="suffix" value=".jsp"/>-->
    <!--</beans:bean>-->

    <beans:bean id="templateResolver"
                class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <beans:property name="prefix" value="/WEB-INF/application/"/>
        <beans:property name="suffix" value=".html"/>
        <beans:property name="templateMode" value="HTML5"/>
    </beans:bean>

    <beans:bean id="templateEngine"
                class="org.thymeleaf.spring4.SpringTemplateEngine">
        <beans:property name="templateResolver" ref="templateResolver"/>
    </beans:bean>

    <beans:bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <beans:property name="templateEngine" ref="templateEngine"/>
    </beans:bean>

</beans:beans>